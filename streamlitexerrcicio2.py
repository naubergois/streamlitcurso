# -*- coding: utf-8 -*-
"""StreamlitExerrcicio2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pEYUaBaffFkJWKcw5mOJGyYdjGszlaJ1
"""

import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Título do App
st.title("Exercício 2: Explorando Funcionalidades Avançadas do Streamlit")

# Seção 1: Gerando dados aleatórios
st.header("Seção 1: Gerando e Visualizando Dados Aleatórios")

# Criando um DataFrame de dados aleatórios
n = st.slider("Selecione o número de dados:", 10, 100, 50)  # Slider para selecionar o tamanho dos dados
data = np.random.randn(n, 2)  # Gerando dados aleatórios
df_random = pd.DataFrame(data, columns=['X', 'Y'])

st.write("Dados Gerados Aleatoriamente:")
st.dataframe(df_random)

# Seção 2: Visualizando dados com gráficos
st.header("Seção 2: Visualizando Dados com Gráficos")

# Opções para escolher o tipo de gráfico
chart_type = st.selectbox("Selecione o tipo de gráfico:", ["Histograma", "Gráfico de Dispersão"])

if chart_type == "Histograma":
    st.write("Histograma dos dados gerados:")
    plt.hist(df_random['X'], bins=15, alpha=0.7, label='X')
    plt.hist(df_random['Y'], bins=15, alpha=0.7, label='Y')
    plt.legend()
    st.pyplot(plt)
elif chart_type == "Gráfico de Dispersão":
    st.write("Gráfico de Dispersão dos dados gerados:")
    plt.scatter(df_random['X'], df_random['Y'])
    plt.xlabel('X')
    plt.ylabel('Y')
    st.pyplot(plt)

# Seção 3: Carregando e processando um arquivo CSV
st.header("Seção 3: Carregando e Processando Arquivo CSV")

# Upload de arquivo CSV
uploaded_file = st.file_uploader("Escolha um arquivo CSV", type="csv")

if uploaded_file is not None:
    df_csv = pd.read_csv(uploaded_file)
    st.write("Dados do arquivo CSV:")
    st.dataframe(df_csv)

    # Exemplo de processamento: calculando a média de uma coluna
    selected_column = st.selectbox("Selecione a coluna para calcular a média:", df_csv.columns)
    if selected_column:
        mean_value = df_csv[selected_column].mean()
        st.write(f"A média da coluna '{selected_column}' é {mean_value:.2f}")

    # Adicionando a opção de salvar o arquivo CSV
    st.header("Salvar DataFrame como CSV")
    if st.button("Salvar CSV"):
        df_csv.to_csv("dados_salvos.csv", index=False)
        st.success("Arquivo CSV salvo como 'dados_salvos.csv'")

# Seção 4: Input e exibição de texto
st.header("Seção 4: Entrada de Texto")

# Entrada de texto
user_input = st.text_input("Digite algo:")
if user_input:
    st.write(f"Você digitou: {user_input}")